rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated(){
      return request.auth.uid != null;
    }
    match /vocabularies/{vocabularyId} {
      // 見ることは誰でもできる
      allow read: if true;
      // 作ることはログインした人しかできない
      allow create: if isAuthenticated()
      // 作成者であり、そのuserを変えようとしていない人がupdateできる
      allow update: if request.auth.uid == resource.data.authorId && resource.data.authorId == request.resource.data.authorId;
      // 作った人だけがdeleteできる。resource.dataはこれから作るデータにアクセスできる
      allow delete: if request.auth.uid == resource.data.authorId;
    }
    match /users/{userId} {
      // 見ることは誰でもできる
      allow read: if true;
      // 作ることはログインした人しかできない
      allow create: if isAuthenticated()
      // 作成者であり、そのuserを変えようとしていない人がupdateできる
      allow update: if request.auth.uid == resource.data.user && resource.data.user == request.resource.data.user;
      // 作った人だけがdeleteできる。resource.dataはこれから作るデータにアクセスできる
      allow delete: if request.auth.uid == resource.data.user;
    }
    match /vocabularies/{vocabularyId}/likedUserIds/{userId} {
      // 見ることは誰でもできる
      allow read: if true;
      // 作る、更新、削除はログインした人しかできない
      allow create, update, delete: if isAuthenticated()
    }
    match /users/{userId}/likedVocabularies/{vocabularyId} {
      // 見ることは誰でもできる
      allow read: if true;
      // 作る、更新、削除はログインした人しかできない
      allow create, update, delete: if isAuthenticated()
    }
    match /vocabularies/{vocabularyId}/words/{wordId} {
      // 見ることは誰でもできる
      allow read: if true;
      // 作成者のidがvocabularyIdにあれば
      allow create: if get(/databases/$(database)/documents/vocabularies/$(vocabularyId)).data.authorId == request.auth.uid;
      // 作成者であり、そのuserを変えようとしていない人がupdateできる
      allow update: if request.auth.uid == resource.data.authorId && resource.data.authorId == request.resource.data.authorId;
      // 作った人だけがdeleteできる。resource.dataはこれから作るデータにアクセスできる
      allow delete: if request.auth.uid == resource.data.authorId;
    }
    match /customers/{customerId} {
      allow read, write: if request.auth.uid == customerId;
    }
  }
}
